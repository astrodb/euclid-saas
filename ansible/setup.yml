---
# Query OpenStack Barbican to retrieve secret keys
# needed for a cluster deployment
#- hosts: openstack
#  roles:
#    - role: alaska_secrets
#      secret_name: "alaska.auth.p3-monitor"
#      secret_var: "alaska_auth_p3_monitor"

# It can be a little slow to get ssh connections initiated.
# This can trigger problems with high connection concurrency through
# a ProxyJump intermediary.
# Increase the number of connections permitted in the startup state
# from the default of 10 to 50.
- hosts: cluster_gw
  become: yes
  vars:
    # Provide increased memory resource for TCP buffers
    gw_tcp_params:
      - key: net.core.rmem_max
        val: 8388608
      - key: net.core.wmem_max
        val: 8388608
      - key: net.core.rmem_default
        val: 65536
      - key: net.core.wmem_default
        val: 65536
      - key: net.ipv4.tcp_rmem
        val: '4096 87380 8388608'
      - key: net.ipv4.tcp_wmem
        val: '4096 65536 8388608'
      - key: net.ipv4.tcp_mem
        val: '8388608 8388608 8388608'
  tasks:
    - name: Increase gw connection concurrency for ProxyJump
      lineinfile:
        path: /etc/ssh/sshd_config
        create: no    # Really should be there, something's wrong if not
        state: present
        regexp: "^[# ]*MaxStartups +[0-9]+:[0-9]+:[0-9]+"
        line: "MaxStartups 50:30:100"
      notify: Restart sshd

    - name: TCP memory buffer tuning
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.val }}"
        state: present
      with_items: "{{ gw_tcp_params }}"

  handlers:
    - name: Restart sshd
      systemd:
        name: sshd
        state: reloaded

# Apply generic setup configuration that is universally useful
- hosts: cluster
  become: yes
  roles:
    - role: oasis_roles.kdump
      kdump_package: kexec-tools
      kdump_conf_path: /etc/kdump.conf
      kdump_become_user: root
      kdump_crash_path: /var/crash
      kdump_core_collector_args: makedumpfile -l --message-level 1 -d 31
      when: kdump_enable | default(true)

    - role: cluster_setup

    - role: resmo.ntp
      ntp_config_server: "{{ infra_ntp_servers | default(omit) }}"

  tasks:

    # Improve entropy for processors with hardware support for rdrand
    # This improves the performance of encrypted connections
    - name: Ensure RNGD package is installed
      package:
        name: rng-tools
        state: present
    - name: Ensure RNGD is enabled and started
      systemd:
        name: rngd
        enabled: yes
        state: started

    # Drop SELinux into permissive state if it is currently enforcing
    - name: Put SELinux out of Enforcing state
      selinux:
        policy: targeted
        state: permissive
      when: 
        - ansible_selinux.status == "enabled"
        - ansible_selinux.mode == "enforcing"

# Bring in site-specific infrastructure configuration.
# It doesn't seem like there's a parameterised way of doing this
- import_playbook: "setup-edi.yml"
  when: infra_name == "edi"
- import_playbook: "setup-ral.yml"
  when: infra_name == "ral"
- import_playbook: "setup-ral-swg.yml"
  when: infra_name == "ral-swg"
- import_playbook: "setup-cam.yml"
  when: infra_name == "cam"
- import_playbook: "setup-imp.yml"
  when: infra_name == "imp"
- import_playbook: "setup-sausage.yml"
  when: infra_name == "sausage"

# Nodes that are defined as OSD servers must have LVM configuration applied.
# This configuration will be defined in site inventory.
- hosts: cluster_ceph_osd
  roles:
    - role: mrlesmithjr.manage-lvm
      become: true
...
